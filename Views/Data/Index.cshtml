@using WebApplication3.Models.ViewModel
@model List<DataVm>

@{
    ViewData["Title"] = "Current patient Medical Data";
}

<div class="container mt-4">
    <h1>@ViewData["Title"]</h1>
    <table class="table table-bordered table-fixed">
        <thead class="thead-dark;">
            <tr>
                <th>Name</th>
                <th>Height (cm)</th>
                <th>Body Circumference (cm)</th>
                <th>Weight (kg)</th>
                <th>BMI</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@(item.Name ?? "") @(item.Surname ?? "")</td>
                    <td>@(item.Height.HasValue ? item.Height.Value.ToString() : "")</td>
                    <td>@(item.BodyCircumference.HasValue ? item.BodyCircumference.Value.ToString() : "")</td>
                    <td>@(item.Weight.HasValue ? item.Weight.Value.ToString() : "")</td>
                    <td>@(item.BMI.HasValue ? item.BMI.Value.ToString() : "")</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="table-responsive mt-4">
        <table class="table table-bordered table-fixed">
            <thead class="thead-dark">
                <tr>
                    <th>Blood Type</th>
                    <th>Heart Rate (bpm)</th>
                    <th>Oxygen Saturation (%)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>

                        <td>@(item.Blood != null ? item.Blood.ToString() : "Unknown")</td>
                        <td>@(item.HeartRate.HasValue ? item.HeartRate.Value.ToString() : "")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="d-flex justify-content-center mt-4">
        <button type="button" class="btn btn-primary">
            Download
        </button>
    </div>
</div>
