@model WebApplication3.Models.ViewModel.MeasurementVm

@{
    ViewData["Title"] = "Create";
}
<h1 class="mr-3">Create new measurement</h1>
<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="MeasurementName"></label>
        <select asp-for="MeasurementName" class="form-control" id="measurementName">
            @foreach (var value in Enum.GetValues(typeof(WebApplication3.Data.Entities.MeasurementName)))
            {
                <option value="@value.ToString()">@Enum.GetName(typeof(WebApplication3.Data.Entities.MeasurementName), value)</option>
            }
        </select>
        <span asp-validation-for="MeasurementName" class="text-danger"></span>
    </div>
    <div class="form-group" id="bodyPartField">
        <label asp-for="BodyPart"></label>
        <select asp-for="BodyPart" class="form-control" id="bodyPartSelect">
            @foreach (var value in Enum.GetValues(typeof(WebApplication3.Data.Entities.BodyPart)))
            {
                <option value="@value.ToString()">@Enum.GetName(typeof(WebApplication3.Data.Entities.BodyPart), value)</option>
            }
        </select>
        <span asp-validation-for="BodyPart" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Comment"></label>
        <textarea asp-for="Comment" class="form-control"></textarea>
        <span asp-validation-for="Comment" class="text-danger"></span>
    </div>
    <div class="form-group" id="valueField">
        <label asp-for="Value" id="valueLabel"></label><br />
        <input asp-for="Value" class="form-control" />
        <span asp-validation-for="Value" class="text-danger"></span>
    </div>
    <p id="unitParagraph" style="display: none;">Unit: </p>
    <div class="form-group">
        <label asp-for="TreatmentTime"></label>
        <input asp-for="TreatmentTime" type="datetime-local" class="form-control" />
        <span asp-validation-for="TreatmentTime" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="SafeRange"></label>
        <input asp-for="SafeRange" class="form-control" type="date" />
        <span asp-validation-for="SafeRange" class="text-danger"></span>
    </div>
        <input type="hidden" asp-for="UserId" value="@ViewData["UserId"]">
    <br>
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
        </form>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var measurementName = document.getElementById("measurementName");
            var bodyPartField = document.getElementById("bodyPartField");
            var valueField = document.getElementById("valueField");
            var bodyPartSelect = document.getElementById("bodyPartSelect");
            var valueInput = document.getElementById("Value");

            measurementName.addEventListener("change", function () {
                var selectedOption = measurementName.value;
                if (selectedOption === "Observation") {
                    bodyPartField.style.display = "block";
                    valueField.style.display = "none";
                    unitParagraph.style.display = "block";
                } else {
                    bodyPartField.style.display = "none";
                    valueField.style.display = "block";
                    unitParagraph.style.display = "none";
                }

                if (selectedOption === "Saturation") {
                    valueInput.min = "0"; 
                    valueInput.max = "100"; 
                } else {
                    valueInput.min = "0"; 
                    valueInput.max = "300"; 
                }
            });

            measurementName.dispatchEvent(new Event("change"));
        });
    </script>


}
