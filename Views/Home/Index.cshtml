@using WebApplication3.Models.ViewModel;
@using WebApplication3.Helpers
@model IEnumerable<MeasurementVm>

@{
    ViewData["Title"] = "Home Page";

    var measurementUnits = new Dictionary<string, string>
    {
        { "Weight", "(kg)" }
    };

    var random = new Random();
}

<div class="container">
    @if (User.Identity.IsAuthenticated)
    {
        <br />
        <div>
            <!--Chart Zone-->
            <div style="my-5 p-4 bg-light text-white center">
                <div style="width: 900px; margin: auto;">
                    @{
                        var measurementName = "Weight";
                        var measurementData = Model.Where(m => m.MeasurementName.ToString() == measurementName).OrderBy(m => m.TreatmentTime.Date).ToList();

                        var xValues = measurementData.Select(m => m.TreatmentTime.Date.ToString("yyyy-MM-dd")).Distinct().OrderBy(d => d).ToList();

                        var randomColor = String.Format("#{0:X6}", random.Next(0x1000000));
                    }

                    <h3><strong>@measurementName @measurementUnits[measurementName]</strong></h3>
                    <canvas id="@("myChart_" + measurementName)" style="width:100%;max-width:800px"></canvas>
                </div>

                <script>
                    var xValues_@measurementName = @Html.Raw(Json.Serialize(xValues));

                    var chartData_@measurementName = {
                    labels: xValues_@measurementName,
                    datasets: [{
                    label: '@measurementName',
                    data: @Html.Raw(Json.Serialize(measurementData.Select(m => m.Value ?? 0))),
                    borderColor: '@randomColor',
                    fill: false
                    }]
                    };

                    new Chart("@("myChart_" + measurementName)", {
                    type: "line",
                    data: chartData_@measurementName,
                    options: {
                    legend: { display: true },
                    scales: {
                    x: {
                    display: true,
                    title: {
                    display: true,
                    text: 'Treatment Date'
                    }
                    },
                    y: {
                    display: true,
                    title: {
                    display: true,
                    text: 'Value'
                    }
                    }
                    }
                    }
                    });
                </script>
            </div>
        </div>
        <!--Profile Zone-->
        <div class="row">
            <div class="col-md-4">
                <div class="my-2 text-white text-left square" style="background-color: rgba(112, 128, 144, 0.7); padding-left: 30px; padding-top: 20px;">
                    <p><h3><b>Profile Zone:</b></h3></p>
                    <b>
                        Name, Surname, BloodType,Date of Birth, age
                    </b>
                </div>
            </div>
            <!--BMI Zone-->
            <div class="col-md-4">
                <div class="my-2 text-white text-center square" style="background-color:rgba(112, 128, 144, 0.7); ">
                    @{
                        var weightMeasurement = Model
                        .Where(m => m.MeasurementName.ToString() == "Weight")
                        .OrderByDescending(m => m.TreatmentTime)
                        .FirstOrDefault();

                        var heightMeasurement = Model
                        .Where(m => m.MeasurementName.ToString() == "Height")
                        .OrderByDescending(m => m.TreatmentTime)
                        .FirstOrDefault();
                        double weight = weightMeasurement?.Value ?? 0;
                        double height = heightMeasurement?.Value ?? 0;

                        if (weight > 0 && height > 0)
                        {
                            var bmiCalculator = new BMI.BMICalculator();
                            double bmiResult = bmiCalculator.CalculateBMI(weight, height);
                            string bmiCategory = bmiCalculator.GetBMICategory(bmiResult);

                            string bgColor = "";
                            string bmiBorder = "";
                            string bmiText = "BMI";
                            string bmiTextColor = "white";
                            string bmiCategoryDescription = "";
                            switch (bmiCategory)
                            {
                                case "Underweight":
                                    bgColor = "#add8e6";
                                    bmiCategoryDescription = "Underweight";
                                    bmiBorder = "#70AFD4";
                                    break;
                                case "Normal weight":

                                    bgColor = "#90EE90";
                                    bmiCategoryDescription = "Normal weight";
                                    bmiBorder = "#55C951";
                                    break;
                                case "Overweight":
                                    bgColor = "#E6E600";
                                    bmiCategoryDescription = "Overweight";
                                    bmiBorder = "#D6D600";
                                    break;
                                case "Obese Class I":
                                    bgColor = "#D6A80F";
                                    bmiCategoryDescription = "Obese Class I";
                                    bmiBorder = "#B08A0C";
                                    break;
                                case "Obese Class II":
                                    bgColor = "#ff781f";
                                    bmiCategoryDescription = "Obese Class II";
                                    bmiBorder = "#E06A1B";
                                    break;
                                case "Obese Class III":
                                    bgColor = "#FF0000";
                                    bmiCategoryDescription = "Obese Class III";
                                    bmiBorder = "#BF0000";
                                    break;
                                default:
                                    break;
                            }

                            <div style="display: flex; align-items: center;">
                                <div style="width: 150px; height: 150px; margin: 20px; background-color: @bgColor; border: 5px solid @bmiBorder; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: @bmiTextColor; font-weight: bold;">
                                    <div style="text-align: center;">
                                        <b style="font-size: 20px;">@bmiText</b>
                                        <div>
                                            <span style="font-size: 36px;">@bmiResult.ToString("F1")</span>
                                        </div>
                                        <div style="text-align: center;">
                                            <p>@bmiCategoryDescription</p>
                                        </div>
                                    </div>
                                </div>


                                <div style="text-align: left; margin-left: 20px;">
                                    <p><b>Weight: @weight kg</b></p>
                                    <p><b>Height: @height cm</b></p>
                                </div>
                            </div>

                        }
                        else
                        {
                            if (weight > 0 && height == 0)
                            {
                                <p>Add Height to display BMI</p>
                            }
                            else if (weight == 0 && height > 0)
                            {
                                <p>Add Weight to display BMI</p>
                            }
                            else
                            {
                                <p>Add Weight and Height to display BMI</p>
                            }
                        }
                    }
                </div>
            </div>
            <!--Pulse Zone-->
            <div class="col-md-4">
                <div class="my-2 text-white text-left square" style="background-color: rgba(112, 128, 144, 0.7); padding-left: 20px; padding-top: 20px;">
                    @{
                        var pulseMeasurements = Model.Where(m => m.MeasurementName.ToString() == "Pulse")
                        .OrderByDescending(m => m.TreatmentTime)
                        .FirstOrDefault();

                        if (pulseMeasurements != null)
                        {
                            var pulseValue = pulseMeasurements.Value ?? 0;
                            var normalRangeMin = 40;
                            var normalRangeMax = 120;

                            string pulseStatus = "";
                            string pulseClass = "";

                            if (pulseValue >= normalRangeMin && pulseValue <= normalRangeMax)
                            {
                                pulseStatus = "Normal";
                                pulseClass = "heart";

                                <table>
                                    <tr>
                                        <td>
                                            <div id="heart" class="@pulseClass">
                                                <div style="padding-left: 120px; width:500px">
                                                    <h3><b><span>Your pulse</span></b></h3>
                                                    <h6> <b><span class="pulse-value">@pulseValue bpm</span></b></h6>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                </table>

                                // Additional information for the norm
                                <div class="text-center" style="background-color: #DFF0D8; border: 1px solid #3C763D; padding: 10px; border-radius: 5px; margin-right:15px;">
                                    <p style="color: #3C763D; font-weight: bold;">Your pulse is good.</p>
                                </div>


                            }
                            else
                            {
                                pulseStatus = "Not Normal";
                                pulseClass = "heart-abnormal";
                                <table>
                                    <tr>
                                        <td>
                                            <div id="heart" class="@pulseClass">
                                                <div style="padding-left: 120px; width:500px">
                                                    <h3><b><span>Your pulse</span></b></h3>
                                                    <h6> <b><span class="pulse-value">@pulseValue bpm</span></b></h6>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                </table>

                                // Additional information for deviations from the norm
                                <div class="text-center">
                                    @if (pulseValue < normalRangeMin || pulseValue > normalRangeMax)
                                    {
                                        <div class="alert alert-danger" role="alert" style="font-size: 14px; display: inline-block; height: 70px; margin-right: 15px; margin-top: 0;">
                                            <p class="mb-0">
                                                Your pulse is @if (pulseValue < normalRangeMin)
                                                {
                                                    <span class="text-danger">low.</span>
                                                }
                                                else
                                                {
                                                    <span class="text-danger">high.</span>
                                                } Contact your doctor for more information.
                                            </p>
                                        </div>
                                    }
                                </div>


                            }
                        }
                        else
                        {
                            <p>No pulse measurements available</p>
                        }
                    }
                </div>
            </div>
        </div>
        <!--Future Test Zone-->
        <div class="row justify-content-center">
            <div class="col-md-4">
                <div class="my-2 p-3  text-white text-left square" style="background-color: rgba(112, 128, 144, 0.7); padding-left: 30px; padding-top: 20px;">
                    <p><h3><b>Tests Zone:</b></h3></p>
                    <p><b>Here you will have tests in the future</b></p>
                </div>
            </div>
            <!--Device Zone-->
            <div class="col-md-4">
                <div class="my-2 text-white text-left square" style="background-color: rgba(112, 128, 144, 0.7); padding-left: 30px; padding-top: 10px;">
                    <p><h3><b>Device Zone:</b></h3></p>
                    <p><b>DeviceType, name</b></p>
                    <p><b>DeviceType, name</b></p>
                    <p><b>DeviceType, name</b></p>
                </div>
            </div>
        </div>


        <style>
            .square {
            height: 200px;
            border: 1px solid #ccc;
            border-radius: 5px;
            }

            #heart {
                position: relative;
                width: 100px;
                height: 100px;
                margin: 10 auto;
                border: 0px solid #8B0000; 
                border-radius: 5px;
            }

                #heart:before,
                #heart:after {
                    position: absolute;
                    content: "";
                    left: 50px;
                    top: 0;
                    width: 50px;
                    height: 80px;
                    background: red;
                    border-radius: 50px 50px 0 0;
                    transform: rotate(-45deg);
                    transform-origin: 0 100%;
                }

                #heart:after {
                    left: 0;
                    transform: rotate(45deg);
                    transform-origin: 100% 100%;
                }

            .heart-abnormal:before,
            .heart-abnormal:after {
                background: #8B0000; /* Ciemnoczerwone tło dla serca */

            }
        </style>
    }